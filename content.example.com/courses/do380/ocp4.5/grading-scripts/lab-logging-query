#!/bin/bash
#
# Copyright 2020 Red Hat, Inc.
#
# NAME
#     lab-logging-query - lab script for DO380-OCP4
#
# SYNOPSIS
#     lab-logging-query {start|finish}
#
#        start  - prepare the system for starting the lab
#        finish - perform post-lab finish
#
# DESCRIPTION
#     This script, based on singular argument, either does start or finish for
#     the Guided Exercise: Querying Cluster Logs with Kibana
#
# CHANGELOG
#   * Tue June 23 Alex Corcoles <alexcorcoles@redhat.com>
#   - copied from template


PATH=/usr/bin:/bin:/usr/sbin:/sbin:/root/bin:/usr/local/bin
declare -a valid_commands=(start finish)

# Change these variables to match your exercise
this='logging-query'
title='Guided Exercise: Querying Cluster Logs with Kibana'
playbook_dir="/usr/local/lib/ansible"

# Do not change these variables
target='workstation'
run_as_root='true'


function lab_start {
  ocp4_print_prereq_header

  ocp4_is_cluster_up
  ocp4_exit_on_failure
  print_line

  ocp4_fail_if_project_exists "${this}"
  ocp4_exit_on_failure "It looks like you have already started this exercise. To try this exercise again, run 'lab ${this} finish' followed by 'lab ${this} start'."

  ocp4_print_setup_header

  print_line
  print_line " Preparing the student's cluster:"

  deploy_ansible

  ocp4_login_as_admin

  pad2 "Creating project ${this}"
  if oc new-project ${this}
  then
    print_SUCCESS
  else
    print_FAIL
  fi
  ocp4_exit_on_failure

  pad2 "Creating logger Deployment"
  if oc create -f ${playbook_dir}/config/logger.yml
  then
    print_SUCCESS
  else
    print_FAIL
  fi
  ocp4_exit_on_failure

  pad2 "Restarting machine-api-operator"
  if oc rollout -n openshift-machine-api restart deployment machine-api-operator
  then
    print_SUCCESS
  else
    print_FAIL
  fi
  ocp4_exit_on_failure

  ocp4_print_setup_footer
}

function lab_finish {
  ocp4_print_cleanup_header

  ocp4_login_as_admin
  ocp4_delete_project "${this}"

  ocp4_print_cleanup_footer
}


############### Don't EVER change anything below this line ###############

# Source library of functions
source /usr/local/lib/${function_lib}
source /usr/local/lib/${platform_lib}

grading_main_program "$@"
